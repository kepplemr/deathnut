components:
  schemas:
    DeathnutAuthSchema:
      properties:
        grants:
          items:
            type: string
          title: Grants
          type: array
        id:
          title: Id
          type: string
        requires:
          title: Requires
          type: string
        revoke:
          default: false
          title: Revoke
          type: boolean
        user:
          title: User
          type: string
      required:
      - id
      - user
      - requires
      - grants
      title: DeathnutAuthSchema
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    PartialRecipe:
      properties:
        ingredients:
          items:
            type: string
          title: Ingredients
          type: array
        title:
          title: Title
          type: string
      title: PartialRecipe
      type: object
    Recipe:
      properties:
        ingredients:
          items:
            type: string
          title: Ingredients
          type: array
        title:
          title: Title
          type: string
      required:
      - title
      - ingredients
      title: Recipe
      type: object
    RecipeWithId:
      properties:
        id:
          title: Id
          type: string
        ingredients:
          items:
            type: string
          title: Ingredients
          type: array
        title:
          title: Title
          type: string
      required:
      - title
      - ingredients
      - id
      title: RecipeWithId
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /auth-recipe:
    post:
      operationId: auth_auth_recipe_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeathnutAuthSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeathnutAuthSchema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Auth
  /recipe:
    post:
      operationId: create_recipe_recipe_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeWithId'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Recipe
  /recipe/{id}:
    get:
      operationId: post_recipe_recipe__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeWithId'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Recipe
    patch:
      operationId: patch_recipe_recipe__id__patch
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialRecipe'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeWithId'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patch Recipe
schemes:
- http
- https
security:
- api_key: []
securityDefinitions:
  api_key:
    in: query
    name: key
    type: apiKey
  firebase-whatever-production:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
    x-google-audiences: recipe-service
    x-google-issuer: jwt-test@wellio-dev-michael.iam.gserviceaccount.com
    x-google-jwks_uri: https://www.googleapis.com/robot/v1/metadata/x509/jwt-test@wellio-dev-michael.iam.gserviceaccount.com
